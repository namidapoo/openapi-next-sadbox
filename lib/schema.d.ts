/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
	"/hello": {
		parameters: {
			query?: never;
			header?: never;
			path?: never;
			cookie?: never;
		};
		/**
		 * Get data
		 * @description Retrieve data based on query parameters
		 */
		get: {
			parameters: {
				query?: {
					/** @description Search query */
					q?: string;
					/** @description Test parameter for error responses (400, 404, 500) */
					error?: 400 | 404 | 500;
				};
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Successful response */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Received GET request. Query: test */
							message?: string;
							/**
							 * Format: date-time
							 * @example 2023-09-01T12:00:00Z
							 */
							timestamp?: string;
						};
					};
				};
				/** @description Bad request */
				400: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Invalid request */
							error?: string;
							/** @example Request parameters are incorrect */
							details?: string;
						};
					};
				};
				/** @description Resource not found */
				404: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Resource not found */
							error?: string;
							/** @example The specified resource does not exist */
							details?: string;
						};
					};
				};
				/** @description Server error */
				500: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Server error occurred */
							error?: string;
							/** @example An unexpected error occurred during processing */
							details?: string;
						};
					};
				};
			};
		};
		/**
		 * Update data
		 * @description Update existing data
		 */
		put: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						[key: string]: unknown;
					};
				};
			};
			responses: {
				/** @description Data updated */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Data updated successfully */
							message?: string;
							/** @example {
							 *       "id": 123,
							 *       "name": "Updated data"
							 *     } */
							receivedData?: {
								[key: string]: unknown;
							};
						};
					};
				};
			};
		};
		/**
		 * Create data
		 * @description Create new data
		 */
		post: {
			parameters: {
				query?: never;
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody: {
				content: {
					"application/json": {
						[key: string]: unknown;
					};
				};
			};
			responses: {
				/** @description Data created successfully */
				201: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Data created successfully */
							message?: string;
							/** @example {
							 *       "name": "Test data",
							 *       "value": 123
							 *     } */
							receivedData?: {
								[key: string]: unknown;
							};
						};
					};
				};
			};
		};
		/**
		 * Delete data
		 * @description Delete data with the specified ID
		 */
		delete: {
			parameters: {
				query: {
					/** @description ID of the data to delete */
					id: string;
				};
				header?: never;
				path?: never;
				cookie?: never;
			};
			requestBody?: never;
			responses: {
				/** @description Data deleted */
				200: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example Data with ID: 123 has been deleted */
							message?: string;
						};
					};
				};
				/** @description Bad request */
				400: {
					headers: {
						[name: string]: unknown;
					};
					content: {
						"application/json": {
							/** @example ID is not specified */
							error?: string;
						};
					};
				};
			};
		};
		options?: never;
		head?: never;
		patch?: never;
		trace?: never;
	};
}
export type webhooks = Record<string, never>;
export interface components {
	schemas: never;
	responses: never;
	parameters: never;
	requestBodies: never;
	headers: never;
	pathItems: never;
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
